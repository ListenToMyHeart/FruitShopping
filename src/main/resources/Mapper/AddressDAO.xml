<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fruit.DAO.AddressDAO">
  <resultMap id="BaseResultMap" type="com.fruit.Model.Address">
    <id column="pkid" jdbcType="INTEGER" property="pkid" />
    <result column="memberid" jdbcType="VARCHAR" property="memberid" />
    <result column="receiveraddress" jdbcType="VARCHAR" property="receiveraddress" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="receiverphone" jdbcType="VARCHAR" property="receiverphone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pkid, memberid, receiveraddress, status, receiver, receiverphone
  </sql>
  <select id="selectByExample" parameterType="com.fruit.Model.AddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from address
    where pkid = #{pkid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from address
    where pkid = #{pkid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fruit.Model.AddressExample">
    delete from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fruit.Model.Address">
    insert into address (pkid, memberid, receiveraddress, 
      status, receiver, receiverphone
      )
    values (#{pkid,jdbcType=INTEGER}, #{memberid,jdbcType=VARCHAR}, #{receiveraddress,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, #{receiverphone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fruit.Model.Address">
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pkid != null">
        pkid,
      </if>
      <if test="memberid != null">
        memberid,
      </if>
      <if test="receiveraddress != null">
        receiveraddress,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="receiverphone != null">
        receiverphone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pkid != null">
        #{pkid,jdbcType=INTEGER},
      </if>
      <if test="memberid != null">
        #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="receiveraddress != null">
        #{receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="receiverphone != null">
        #{receiverphone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fruit.Model.AddressExample" resultType="java.lang.Long">
    select count(*) from address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update address
    <set>
      <if test="record.pkid != null">
        pkid = #{record.pkid,jdbcType=INTEGER},
      </if>
      <if test="record.memberid != null">
        memberid = #{record.memberid,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveraddress != null">
        receiveraddress = #{record.receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null">
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverphone != null">
        receiverphone = #{record.receiverphone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update address
    set pkid = #{record.pkid,jdbcType=INTEGER},
      memberid = #{record.memberid,jdbcType=VARCHAR},
      receiveraddress = #{record.receiveraddress,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      receiverphone = #{record.receiverphone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fruit.Model.Address">
    update address
    <set>
      <if test="memberid != null">
        memberid = #{memberid,jdbcType=VARCHAR},
      </if>
      <if test="receiveraddress != null">
        receiveraddress = #{receiveraddress,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="receiverphone != null">
        receiverphone = #{receiverphone,jdbcType=VARCHAR},
      </if>
    </set>
    where pkid = #{pkid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fruit.Model.Address">
    update address
    set memberid = #{memberid,jdbcType=VARCHAR},
      receiveraddress = #{receiveraddress,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      receiverphone = #{receiverphone,jdbcType=VARCHAR}
    where pkid = #{pkid,jdbcType=INTEGER}
  </update>
</mapper>