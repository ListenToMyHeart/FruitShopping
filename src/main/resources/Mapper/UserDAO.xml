<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fruit.DAO.UserDAO">
  <resultMap id="BaseResultMap" type="com.fruit.Model.User">
    <id column="userid" jdbcType="VARCHAR" property="userid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="privelege" jdbcType="INTEGER" property="privelege" />
    <result column="truename" jdbcType="VARCHAR" property="truename" />
    <result column="loaddate" jdbcType="DATE" property="loaddate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userid, password, status, privelege, truename, loaddate
  </sql>
  <select id="selectByExample" parameterType="com.fruit.Model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fruit.Model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fruit.Model.User">
    insert into user (userid, password, status, 
      privelege, truename, loaddate
      )
    values (#{userid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{privelege,jdbcType=INTEGER}, #{truename,jdbcType=VARCHAR}, #{loaddate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fruit.Model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userid,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="privelege != null">
        privelege,
      </if>
      <if test="truename != null">
        truename,
      </if>
      <if test="loaddate != null">
        loaddate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="privelege != null">
        #{privelege,jdbcType=INTEGER},
      </if>
      <if test="truename != null">
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="loaddate != null">
        #{loaddate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fruit.Model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.privelege != null">
        privelege = #{record.privelege,jdbcType=INTEGER},
      </if>
      <if test="record.truename != null">
        truename = #{record.truename,jdbcType=VARCHAR},
      </if>
      <if test="record.loaddate != null">
        loaddate = #{record.loaddate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set userid = #{record.userid,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      privelege = #{record.privelege,jdbcType=INTEGER},
      truename = #{record.truename,jdbcType=VARCHAR},
      loaddate = #{record.loaddate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fruit.Model.User">
    update user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="privelege != null">
        privelege = #{privelege,jdbcType=INTEGER},
      </if>
      <if test="truename != null">
        truename = #{truename,jdbcType=VARCHAR},
      </if>
      <if test="loaddate != null">
        loaddate = #{loaddate,jdbcType=DATE},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fruit.Model.User">
    update user
    set password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      privelege = #{privelege,jdbcType=INTEGER},
      truename = #{truename,jdbcType=VARCHAR},
      loaddate = #{loaddate,jdbcType=DATE}
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>